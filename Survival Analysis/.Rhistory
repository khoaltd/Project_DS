data = pd.read_csv('haberman.csv', names = ['Age','Operation_year','Nb_pos_detected','Surv'])
library(survival)
library(survminer)
library(tidyverse)
library(survival)
library(survminer)
library(tidyverse)
library(survival)
library(survminer)
options(repr.plot.width = 16, repr.plot.height = 7)
library(tidyverse)
library(survival)
library(survminer)
options(repr.plot.width = 16, repr.plot.height = 7)
all_df <- read_csv('heart_failure_clinical_records_dataset.csv', col_type = cols())
# Sample 3 + 3 points from death/censored groups, and plot them for comparison
plot_censoring <- all_df %>% group_by(DEATH_EVENT) %>% sample_n(3) %>% ungroup() %>% select(time, DEATH_EVENT)
# Data Transformation for Plotting
plot_censoring %>%
mutate(
time_start = 0,
case_id = factor(c(1:nrow(plot_censoring))),
death_event = factor(ifelse(DEATH_EVENT == 1, "death", "censored"))
)
# Reshape Data for Plotting
pivot_longer(
cols = c(time, time_start),
names_to = "source",
values_to = "time"
)
# Sample 3 + 3 points from death/censored groups, and plot them for comparison
plot_censoring <- all_df %>% group_by(DEATH_EVENT) %>% sample_n(3) %>% ungroup() %>% select(time, DEATH_EVENT)
# Data Transformation for Plotting
plot_censoring %>%
mutate(
time_start = 0,
case_id = factor(c(1:nrow(plot_censoring))),
death_event = factor(ifelse(DEATH_EVENT == 1, "death", "censored"))
)
# Reshape Data for Plotting
pivot_longer(
cols = c(time, time_start),
names_to = "source",
values_to = "time"
)
# Sample 3 + 3 points from death/censored groups, and plot them for comparison
plot_censoring <- all_df %>% group_by(DEATH_EVENT) %>% sample_n(3) %>% ungroup() %>% select(time, DEATH_EVENT)
# Data Transformation for Plotting
plot_censoring %>%
mutate(
time_start = 0,
case_id = factor(c(1:nrow(plot_censoring))),
death_event = factor(ifelse(DEATH_EVENT == 1, "death", "censored"))
)%>%
# Reshape Data for Plotting
pivot_longer(
cols = c(time, time_start),
names_to = "source",
values_to = "time"
) %>%
ggplot(aes(x = time, y = case_id, group = factor(case_id))) +
geom_bar(stat = "Identity", aes(fill = death_event), colour = "black", width = 0.3) +
ggtitle("Time till Death/Censoring - 6 sampled cases from dataset") +
theme(plot.title = element_text(size = 22),
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
axis.title = element_text(size = 16))
# Censoring vs Death
options(repr.plot.width = 10, repr.plot.height = 4)
all_df %>%
mutate(event_type = factor(ifelse(DEATH_EVENT == 1, "death", "censored"))) %>%
group_by(event_type) %>%
tally(name = "count") %>%
ggplot(aes(x = event_type, y = count)) +
geom_bar(stat = "Identity", fill = "blue", width = 0.2, colour = "black") +
ggtitle("Censored vs Deaths") +
theme(plot.title = element_text(size = 22),
axis.title = element_text(size = 16))
# Distribution of time-to-event by event type
options(repr.plot.width = 12, repr.plot.height = 5)
all_df %>%
mutate(
event_type = factor(ifelse(DEATH_EVENT == 1, "death", "censored"))
) %>%
select(event_type, time) %>%
ggplot(aes(x = time, colour = event_type)) +
geom_density() +
ggtitle("Distribution of time-to-event by type of event (Censored vs Deaths)") +
theme(plot.title = element_text(size = 22),
axis.title = element_text(size = 16),
legend.title = element_text(size = 18),
legend.text = element_text(size = 16))
# Kaplan-meier analysis
km_model <- survfit(Surv(time, DEATH_EVENT) ~ 1, data = all_df)
library(tidyverse)
library(survival)
library(survminer)
options(repr.plot.width = 16, repr.plot.height = 7)
# Read data
all_df <- read_csv('heart_failure_clinical_records_dataset.csv', col_type = cols())
plot_censoring <- all_df %>% group_by(DEATH_EVENT) %>% sample_n(3) %>% ungroup() %>% select(time, DEATH_EVENT)
# Sample 3 + 3 points from death/censored groups, and plot them for comparison
plot_censoring <- all_df %>% group_by(DEATH_EVENT) %>% sample_n(3) %>% ungroup() %>% select(time, DEATH_EVENT)
# Data Transformation for Plotting
plot_censoring %>%
mutate(
time_start = 0,
case_id = factor(c(1:nrow(plot_censoring))),
death_event = factor(ifelse(DEATH_EVENT == 1, "death", "censored"))
)%>%
# Reshape Data for Plotting
pivot_longer(
cols = c(time, time_start),
names_to = "source",
values_to = "time"
) %>%
ggplot(aes(x = time, y = case_id, group = factor(case_id))) +
geom_bar(stat = "Identity", aes(fill = death_event), colour = "black", width = 0.3) +
ggtitle("Time till Death/Censoring - 6 sampled cases from dataset") +
theme(plot.title = element_text(size = 22),
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
axis.title = element_text(size = 16))
options(repr.plot.width = 10, repr.plot.height = 4)
all_df %>%
mutate(event_type = factor(ifelse(DEATH_EVENT == 1, "death", "censored"))) %>%
group_by(event_type) %>%
tally(name = "count") %>%
ggplot(aes(x = event_type, y = count)) +
geom_bar(stat = "Identity", fill = "blue", width = 0.2, colour = "black") +
ggtitle("Censored vs Deaths") +
theme(plot.title = element_text(size = 22),
axis.title = element_text(size = 16))
# Distribution of time-to-event by event type
options(repr.plot.width = 12, repr.plot.height = 5)
all_df %>%
mutate(
event_type = factor(ifelse(DEATH_EVENT == 1, "death", "censored"))
) %>%
select(event_type, time) %>%
ggplot(aes(x = time, colour = event_type)) +
geom_density() +
ggtitle("Distribution of time-to-event by type of event (Censored vs Deaths)") +
theme(plot.title = element_text(size = 22),
axis.title = element_text(size = 16),
legend.title = element_text(size = 18),
legend.text = element_text(size = 16))
# Kaplan-meier analysis
km_model <- survfit(Surv(time, DEATH_EVENT) ~ 1, data = all_df)
summary(km_model, times = seq(from = 0, to = 290, by = 30))
ggsurvplot(km_model, data = all_df, risk.table = TRUE,
break.time.by = 10, size = 0.3, tables.height = 0.15)
cox.zph(cox_model)
library(tidyverse)
library(survival)
library(survminer)
options(repr.plot.width = 16, repr.plot.height = 7)
# Read data
all_df <- read_csv('heart_failure_clinical_records_dataset.csv', col_type = cols())
plot_censoring <- all_df %>% group_by(DEATH_EVENT) %>% sample_n(3) %>% ungroup() %>% select(time, DEATH_EVENT)
# Sample 3 + 3 points from death/censored groups, and plot them for comparison
plot_censoring <- all_df %>% group_by(DEATH_EVENT) %>% sample_n(3) %>% ungroup() %>% select(time, DEATH_EVENT)
# Data Transformation for Plotting
plot_censoring %>%
mutate(
time_start = 0,
case_id = factor(c(1:nrow(plot_censoring))),
death_event = factor(ifelse(DEATH_EVENT == 1, "death", "censored"))
)%>%
# Reshape Data for Plotting
pivot_longer(
cols = c(time, time_start),
names_to = "source",
values_to = "time"
) %>%
ggplot(aes(x = time, y = case_id, group = factor(case_id))) +
geom_bar(stat = "Identity", aes(fill = death_event), colour = "black", width = 0.3) +
ggtitle("Time till Death/Censoring - 6 sampled cases from dataset") +
theme(plot.title = element_text(size = 22),
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
axis.title = element_text(size = 16))
options(repr.plot.width = 10, repr.plot.height = 4)
all_df %>%
mutate(event_type = factor(ifelse(DEATH_EVENT == 1, "death", "censored"))) %>%
group_by(event_type) %>%
tally(name = "count") %>%
ggplot(aes(x = event_type, y = count)) +
geom_bar(stat = "Identity", fill = "blue", width = 0.2, colour = "black") +
ggtitle("Censored vs Deaths") +
theme(plot.title = element_text(size = 22),
axis.title = element_text(size = 16))
# Distribution of time-to-event by event type
options(repr.plot.width = 12, repr.plot.height = 5)
all_df %>%
mutate(
event_type = factor(ifelse(DEATH_EVENT == 1, "death", "censored"))
) %>%
select(event_type, time) %>%
ggplot(aes(x = time, colour = event_type)) +
geom_density() +
ggtitle("Distribution of time-to-event by type of event (Censored vs Deaths)") +
theme(plot.title = element_text(size = 22),
axis.title = element_text(size = 16),
legend.title = element_text(size = 18),
legend.text = element_text(size = 16))
# Kaplan-meier analysis
km_model <- survfit(Surv(time, DEATH_EVENT) ~ 1, data = all_df)
summary(km_model, times = seq(from = 0, to = 290, by = 30))
# Plot Kaplan-Meier plot
options(repr.plot.width = 18, repr.plot.height = 8)
ggsurvplot(km_model, data = all_df, risk.table = TRUE,
break.time.by = 10, size = 0.3, tables.height = 0.15)
cox.zph(cox_model)
library(tidyverse)
library(survival)
library(survminer)
options(repr.plot.width = 16, repr.plot.height = 7)
# Read data
all_df <- read_csv('heart_failure_clinical_records_dataset.csv', col_type = cols())
plot_censoring <- all_df %>% group_by(DEATH_EVENT) %>% sample_n(3) %>% ungroup() %>% select(time, DEATH_EVENT)
# Sample 3 + 3 points from death/censored groups, and plot them for comparison
plot_censoring <- all_df %>% group_by(DEATH_EVENT) %>% sample_n(3) %>% ungroup() %>% select(time, DEATH_EVENT)
# Data Transformation for Plotting
plot_censoring %>%
mutate(
time_start = 0,
case_id = factor(c(1:nrow(plot_censoring))),
death_event = factor(ifelse(DEATH_EVENT == 1, "death", "censored"))
)%>%
# Reshape Data for Plotting
pivot_longer(
cols = c(time, time_start),
names_to = "source",
values_to = "time"
) %>%
ggplot(aes(x = time, y = case_id, group = factor(case_id))) +
geom_bar(stat = "Identity", aes(fill = death_event), colour = "black", width = 0.3) +
ggtitle("Time till Death/Censoring - 6 sampled cases from dataset") +
theme(plot.title = element_text(size = 22),
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
axis.title = element_text(size = 16))
options(repr.plot.width = 10, repr.plot.height = 4)
all_df %>%
mutate(event_type = factor(ifelse(DEATH_EVENT == 1, "death", "censored"))) %>%
group_by(event_type) %>%
tally(name = "count") %>%
ggplot(aes(x = event_type, y = count)) +
geom_bar(stat = "Identity", fill = "blue", width = 0.2, colour = "black") +
ggtitle("Censored vs Deaths") +
theme(plot.title = element_text(size = 22),
axis.title = element_text(size = 16))
# Distribution of time-to-event by event type
options(repr.plot.width = 12, repr.plot.height = 5)
all_df %>%
mutate(
event_type = factor(ifelse(DEATH_EVENT == 1, "death", "censored"))
) %>%
select(event_type, time) %>%
ggplot(aes(x = time, colour = event_type)) +
geom_density() +
ggtitle("Distribution of time-to-event by type of event (Censored vs Deaths)") +
theme(plot.title = element_text(size = 22),
axis.title = element_text(size = 16),
legend.title = element_text(size = 18),
legend.text = element_text(size = 16))
# Kaplan-meier analysis
km_model <- survfit(Surv(time, DEATH_EVENT) ~ 1, data = all_df)
summary(km_model, times = seq(from = 0, to = 290, by = 30))
# Plot Kaplan-Meier plot
options(repr.plot.width = 18, repr.plot.height = 8)
ggsurvplot(km_model, data = all_df, risk.table = TRUE,
break.time.by = 10, size = 0.3, tables.height = 0.15)
cox.zph(cox_model)
# Kaplan-Meier curve based on presence/absence of smoking
km_model <- all_df %>%
mutate(
smoking = factor(ifelse(smoking == 0, "non-smoker", "smoker"))
) %>%
survfit(Surv(time, DEATH_EVENT) ~ smoking, data = .)
ggsurvplot(km_model, data = all_df, risk.table = TRUE,
break.time.by = 10, size = 0.3, tables.height = 0.20)
# Change columns into factors and scale columns to enable better model fit
all_df <- all_df %>%
mutate(
anaemia = factor(ifelse(anaemia == 1, "anaemic", "non-anaemic"), levels = c("non-anaemic", "anaemic")),
diabetes = factor(ifelse(diabetes == 1, "diabetic", "non-diabetic"), levels = c("non-diabetic", "diabetic")),
high_blood_pressure = factor(ifelse(high_blood_pressure == 1, "high-bp", "non-high-bp"), levels = c("non-high-bp", "high-bp")),
sex = factor(ifelse(sex == 0, "female", "male"), levels = c("female", "male")),
smoking = factor(ifelse(smoking == 0, "non-smoker", "smoker"), levels = c("non-smoker", "smoker")),
platelets = platelets/1e4,
creatinine_phosphokinase = creatinine_phosphokinase/1e3
)
all_df %>% head
# Cox proportional hazard model
cox_model <- coxph(Surv(time, DEATH_EVENT) ~ age + anaemia + creatinine_phosphokinase + diabetes + ejection_fraction +
high_blood_pressure + platelets + smoking + sex,
data = all_df)
summary(cox_model)
# Plot the survival for a population with mean value of covariates
ggsurvplot(survfit(cox_model), data = all_df, risk.table = TRUE, break.time.by = 10)
# A data-set with 2 rows. 1 row per factor level. Numerical covariates are set to median value.
compare_smoking_median_age <- tibble(
age = rep(median(all_df$age), 2),
anaemia = factor(c("anaemic", "non-anaemic"), levels = levels(all_df$anaemia)),
creatinine_phosphokinase = rep(median(all_df$creatinine_phosphokinase), 2),
diabetes = factor(c("diabetic", "non-diabetic"), levels = levels(all_df$diabetes)),
ejection_fraction = rep(median(all_df$ejection_fraction), 2),
high_blood_pressure = factor(c("high-bp", "non-high-bp"), levels = levels(all_df$high_blood_pressure)),
platelets = rep(median(all_df$platelets), 2),
smoking = factor(c("smoker", "non-smoker"), levels = levels(all_df$smoking)),
sex = factor(c("male", "female"), levels = levels(all_df$sex)),
)
compare_smoking_median_age
ggsurvplot(survfit(cox_model, data = compare_smoking_median_age, newdata = compare_smoking_median_age), conf.int = TRUE)
```{r}
cox.zph(cox_model)
options(repr.plot.width = 18, repr.plot.height = 12)
ggcoxzph(cox.zph(cox_model))
censored_patients %>%
select(patient_id, time, original_survival, updated_survival) %>%
filter(patient_id < 5) %>%
pivot_longer(cols = original_survival:updated_survival,
names_to = "source",
values_to = "survival") %>%
ggplot(aes(x = time, y = survival, colour = source)) +
geom_line() +
facet_wrap(vars(patient_id)) +
ggtitle("Original survival curves vs Updated survival curves - 4 patients") +
scale_y_continuous(breaks = seq(0, 1, 0.1)) +
scale_x_continuous(breaks = seq(0, 300, 20)) +
theme(plot.title = element_text(size = 22),
axis.title = element_text(size = 16),
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
legend.position = "bottom")
# Predict the new survival function for censored patients
# Given the coxph model, calculate the survival probability of each censored patient at the time they got censored
censored_patients <- all_df %>%
filter(DEATH_EVENT == 0) %>%
mutate(
last_survival = exp(-1 * predict(cox_model, newdata = ., type = "expected")),
join_col = 1,
patient_id = seq(1, nrow(.), 1)
)
# Since we know that the patients were alive at the time they got censored, use that information to update
# the survival probability for each patient (calculated in the previous code chunk)
censored_patients %<>%
inner_join(
tibble(
time_pred = seq(1, 300, 1),
join_col = 1
),
by = "join_col"
) %>%
rename(
censored_time = time,
time = time_pred) %>%
mutate(
original_survival = exp(-1 * predict(cox_model, newdata = ., type = "expected")),
updated_survival = case_when(
time <= censored_time ~ 1,
TRUE ~ original_survival/last_survival
)
)
censored_patients %>%
select(patient_id, censored_time, time, original_survival, updated_survival) %>%
head(15)
censored_patients %>%
select(patient_id, time, original_survival, updated_survival) %>%
filter(patient_id < 5) %>%
pivot_longer(cols = original_survival:updated_survival,
names_to = "source",
values_to = "survival") %>%
ggplot(aes(x = time, y = survival, colour = source)) +
geom_line() +
facet_wrap(vars(patient_id)) +
ggtitle("Original survival curves vs Updated survival curves - 4 patients") +
scale_y_continuous(breaks = seq(0, 1, 0.1)) +
scale_x_continuous(breaks = seq(0, 300, 20)) +
theme(plot.title = element_text(size = 22),
axis.title = element_text(size = 16),
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
legend.position = "bottom")
install.packages("tinytex")
tinytex::install_tinytex()
install.packages("tinytex")
update.packages(ask = FALSE, checkBuilt = TRUE)
